import re
import pandas as pd

def extract_boot_events(dump_file):
    """
    Extracts boot-related timestamps from a dumpstate file.
    Returns a dictionary with event timestamps.
    """
    boot_events = {
        "kernel": None,
        "fsck": None,
        "zygote": None,
        "system_server": None,
        "boot_completed": None
    }

    # Regex patterns for important boot events
    patterns = {
        "kernel": r"\s*(\d+\.\d+) Booting Linux Kernel",
        "fsck": r"\s*(\d+\.\d+) fsck completed",
        "zygote": r"\s*(\d+\.\d+) Starting Zygote",
        "system_server": r"\s*(\d+\.\d+) SystemServer is ready",
        "boot_completed": r"\s*(\d+\.\d+) ACTION_BOOT_COMPLETED"
    }

    with open(dump_file, "r", encoding="utf-8", errors="ignore") as file:
        for line in file:
            for event, pattern in patterns.items():
                match = re.search(pattern, line)
                if match and boot_events[event] is None:
                    boot_events[event] = float(match.group(1))

    return boot_events

# File paths for DUT and REF logs
dut_log = "dut_dumpstate.txt"  # Update with your DUT dumpstate file path
ref_log = "ref_dumpstate.txt"  # Update with your REF dumpstate file path

# Extract boot event timestamps
dut_events = extract_boot_events(dut_log)
ref_events = extract_boot_events(ref_log)

# Create a DataFrame to compare events
boot_comparison = pd.DataFrame.from_dict(
    {
        "DUT": dut_events,
        "REF": ref_events
    }
)

# Calculate deltas (DUT - REF)
boot_comparison["Delta (DUT - REF)"] = boot_comparison["DUT"] - boot_comparison["REF"]

# Identify which stage is slower
boot_comparison["Status"] = boot_comparison["Delta (DUT - REF)"].apply(
    lambda x: "⚠ Slower on DUT" if x > 0 else ("✅ Faster on DUT" if x < 0 else "🔄 Same time")
)

# Display results
import ace_tools as tools
tools.display_dataframe_to_user(name="Boot Time Comparison", dataframe=boot_comparison)
